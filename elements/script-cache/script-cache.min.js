class ScriptCache extends HTMLElement{connectedCallback(){const ver=this.getAttribute("src")+";"+this.getAttribute("v"),cached=localStorage.getItem(ver);return cached?void(this.hasAttribute("debug")&&console.log("retrieving script cache "+ver),eval(cached)):this.get(this.getAttribute("src"))}async get(ver){const[u,h]=ver.split(";"),code=await(await fetch(u)).text(),hash=(await this.hash(code)).slice(0,10),k=u+";"+hash;this.hasAttribute("debug")&&console.log(k+" setting script cache "+code),localStorage.setItem(k,code),eval(code)}async hash(a){const b=new TextEncoder().encode(a),c=await crypto.subtle.digest("SHA-256",b),d=Array.from(new Uint8Array(c)),e=d.map(a=>a.toString(16).padStart(2,"0")).join("");return e}}customElements.define("script-cache",ScriptCache);
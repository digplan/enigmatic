class DataSupabase extends EnigmaticElement{attr={};url="";constructor(){super()}async connectedCallback(){for(let a of this.attributes)this.attr[a.name]=a.value;this.headers={apikey:window.supa_anon,Authorization:`Bearer ${window.supa_anon}`},this.url=`https://${db}.supabase.co/rest/v1/${t}`,this.hasAttribute("wait")||(console.log(this.id),await window.ready(),this.fetch())}async fetch(){const{db:a,t:b,q:c,key:d,target:e,cache:f}=this.attr;let g;const h=`${this.url}?${c}`;if(g=f?await this.cache(h):await(await fetch(h,{headers:this.headers})).json(),g.message)throw Error(g.message);e&&(window.data[e]=g)}async insert(a="POST"){let b=$([target=`${this.id}`]),c={};for(const d in b)c[d.name]=d.value;const d={method:a,body:JSON.stringify(c),headers:this.headers};let e=await(await fetch(`${this.url}`,d)).json();if(e.message)throw Error(e.message)}async update(){return this.insert("PATCH")}async delete(){return this.insert("DELETE")}async cache(a){const b=localStorage.getItem(a);if(b)return JSON.parse(b);const c=await(await fetch(a)).json();return localStorage.setItem(a,JSON.stringify(c)),c}}customElements.define("data-supabase",DataSupabase);